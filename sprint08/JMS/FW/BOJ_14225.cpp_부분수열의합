#include <iostream>
#include <map>
#include <vector>

using namespace std;

int N;
int arr[20];
map<int, bool> m;
vector<vector<int>> pV;

void Input() {
	cin >> N;
	for (int i = 0;i < N;i++)
		cin >> arr[i];
}

void Permutation(vector<int> v, int index, int n) {
	if (v.size() == n) {
		pV.push_back(v);
		return;
	}

	for (int i = index; i < N;i++) {
		v.push_back(arr[i]);
		Permutation(v, i + 1, n);
		v.pop_back();
	}
}

void Solution() {
	for (int i = 0;i < N;i++) {
		vector<int> v;
		pV.clear();
		Permutation(v, 0, i + 1);
		for (int j = 0;j < pV.size();j++) {
			int sum = 0;
			for (auto p : pV[j])
				sum += p;
			m[sum] = true;
		}
	}

	for (int i = 1;i <= 20 * 100000; i++) {
		if (!m[i]) {
			cout << i;
			return;
		}
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Input();
	Solution();
}
