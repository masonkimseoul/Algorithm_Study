#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

long long dp[100001][4] = {0};
vector<int> v;
int mod = 1e9 + 9;

void Solution(int N) {
	dp[1][1] = dp[2][2] = dp[3][1] = dp[3][2] = dp[3][3] = 1;

	for (int i = 4;i <= N;i++) {
		dp[i][1] = (dp[i - 1][2] + dp[i - 1][3]) % mod;
		dp[i][2] = (dp[i - 2][1] + dp[i - 2][3]) % mod;
		dp[i][3] = (dp[i - 3][1] + dp[i - 3][2]) % mod;
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int T, N, maxN = 0;
	cin >> T;
	for (int i = 0;i < T;i++) {
		cin >> N;
		v.push_back(N);
		maxN = max(maxN, N);
	}

	Solution(maxN);

	for (int i = 0;i < T;i++)
		cout << (dp[v[i]][1] + dp[v[i]][2] + dp[v[i]][3]) % mod << '\n';
}
