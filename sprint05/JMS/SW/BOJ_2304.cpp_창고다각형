#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<pair<int, int>> v;
int arr[1000][1000] = { 0 };
int N, cnt = 0;

void Input() {
	cin >> N;
	for (int i = 0; i < N; i++) {
		int L, H;

		cin >> L >> H;
		v.push_back(make_pair(L, H));
	}
}

bool FirstCompare(pair<int, int> a, pair<int, int> b) {
	return a.first < b.first;
}

void Solution() {
	int index = 0, i;

	sort(v.begin(), v.end(), FirstCompare);

	for (i = 0; i < N; i++) {
		if (v[index].second <= v[i].second) {
			cnt += (v[i].first - v[index].first) * (v[index].second);
			index = i;
		}
	}

	cnt += v[index].second;

	index = N - 1;
	for (i = N - 1; i >= 0; i--) {
		if (v[index].second < v[i].second) {
			cnt += (v[index].first - v[i].first) * (v[index].second);
			index = i;
		}
	}

	cout << cnt;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Input();
	Solution();
}
