#include <iostream>
#include <queue>
#include <vector>
#include <cstring>
#include <algorithm>

using namespace std;

typedef struct info {
	int priority;
	bool isWant;
}Info;

int T, N, M;
int arr[100];

void Solution() {
	vector<pair<int, Info>> v;
	int cnt = 0;

	for (int i = 0; i < N; i++) {
		Info temp = { arr[i], false };
		v.push_back(make_pair(i, temp));
	}

	v[M].second.isWant = true;

	while (1) {
		bool isGreater = false;

		for (int i = 1; i < v.size(); i++) {
			if (v[0].second.priority < v[i].second.priority) {
				isGreater = true;
				break;
			}
		}

		if (isGreater) {
			pair<int, Info> temp = v[0];
			v.erase(v.begin());
			v.push_back(temp);
		}
		else {
			cnt++;
			if (v[0].second.isWant) {
				cout << cnt << '\n';
				return;
			}
			v.erase(v.begin());
		}
	}
}

void Input() {
	cin >> T;

	for (int i = 0; i < T; i++) {
		cin >> N >> M;

		memset(arr, 0, sizeof(arr));
		for (int i = 0; i < N; i++)
			cin >> arr[i];

		Solution();
	}
}


int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	Input();
}
